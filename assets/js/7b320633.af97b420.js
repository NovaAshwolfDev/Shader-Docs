"use strict";(globalThis.webpackChunkmilo_shader_docs=globalThis.webpackChunkmilo_shader_docs||[]).push([[371],{1328:(e,d,r)=>{r.r(d),r.d(d,{assets:()=>c,contentTitle:()=>l,default:()=>x,frontMatter:()=>n,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"shaders/gridshader/properties","title":"Properties","description":"| Property | Type | Description |","source":"@site/docs/shaders/gridshader/properties.md","sourceDirName":"shaders/gridshader","slug":"/shaders/gridshader/properties","permalink":"/docs/shaders/gridshader/properties","draft":false,"unlisted":false,"editUrl":"https://github.com/NovaAshwolfDev/Shader-Docs/tree/main/docs/shaders/gridshader/properties.md","tags":[],"version":"current","frontMatter":{"id":"properties","title":"Properties"},"sidebar":"docsSidebar","previous":{"title":"Overview","permalink":"/docs/shaders/gridshader/overview"},"next":{"title":"Usage","permalink":"/docs/shaders/gridshader/usage"}}');var t=r(4848),i=r(8453);const n={id:"properties",title:"Properties"},l="Shader Properties",c={},o=[];function h(e){const d={blockquote:"blockquote",code:"code",h1:"h1",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(d.header,{children:(0,t.jsx)(d.h1,{id:"shader-properties",children:"Shader Properties"})}),"\n",(0,t.jsxs)(d.table,{children:[(0,t.jsx)(d.thead,{children:(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.th,{children:"Property"}),(0,t.jsx)(d.th,{children:"Type"}),(0,t.jsx)(d.th,{children:"Description"})]})}),(0,t.jsxs)(d.tbody,{children:[(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"_GridTex"})}),(0,t.jsx)(d.td,{children:"2D"}),(0,t.jsx)(d.td,{children:"Base grid texture."})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"_Color"})}),(0,t.jsx)(d.td,{children:"Color"}),(0,t.jsx)(d.td,{children:"Tint color for emission."})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"_Zoom"})}),(0,t.jsx)(d.td,{children:"Range (0\u201310)"}),(0,t.jsx)(d.td,{children:"Scales or zooms the grid pattern."})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"_WorldPosAndZoom"})}),(0,t.jsx)(d.td,{children:"Toggle"}),(0,t.jsx)(d.td,{children:"Uses world position to map the grid."})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"_CameraDir"})}),(0,t.jsx)(d.td,{children:"Toggle"}),(0,t.jsx)(d.td,{children:"Scrolls the grid relative to camera direction."})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"_Cull"})}),(0,t.jsx)(d.td,{children:"Enum"}),(0,t.jsx)(d.td,{children:"Sets face culling mode (Back/Front/Off)."})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"_GradientEnabled"})}),(0,t.jsx)(d.td,{children:"Toggle"}),(0,t.jsx)(d.td,{children:"Enables color blending between two gradient colors."})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"_GradCol1"})}),(0,t.jsx)(d.td,{children:"Color"}),(0,t.jsx)(d.td,{children:"Gradient start color."})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"_GradCol2"})}),(0,t.jsx)(d.td,{children:"Color"}),(0,t.jsx)(d.td,{children:"Gradient end color."})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"_GradientWorldPos"})}),(0,t.jsx)(d.td,{children:"Toggle"}),(0,t.jsx)(d.td,{children:"Applies gradient based on world position instead of UV."})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"_RainbowEnabled"})}),(0,t.jsx)(d.td,{children:"Toggle"}),(0,t.jsx)(d.td,{children:"Enables rainbow color cycling."})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"_HueSpeed"})}),(0,t.jsx)(d.td,{children:"Range (0\u20133)"}),(0,t.jsx)(d.td,{children:"Speed of hue shifting."})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"_SpiralEnabled"})}),(0,t.jsx)(d.td,{children:"Toggle"}),(0,t.jsx)(d.td,{children:"Adds spiral-based hue motion."})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"_SpiralAxis"})}),(0,t.jsx)(d.td,{children:"Vector"}),(0,t.jsx)(d.td,{children:"Axis for spiral hue motion."})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"_AlphaMaskEnabled"})}),(0,t.jsx)(d.td,{children:"Toggle"}),(0,t.jsx)(d.td,{children:"Enables use of alpha mask."})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"_AlphaMaskTex"})}),(0,t.jsx)(d.td,{children:"2D"}),(0,t.jsx)(d.td,{children:"Alpha mask texture."})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"_GridGlideEnabled"})}),(0,t.jsx)(d.td,{children:"Toggle"}),(0,t.jsx)(d.td,{children:"Enables tile-gliding animation."})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"_GridGlideAtlas"})}),(0,t.jsx)(d.td,{children:"2D"}),(0,t.jsx)(d.td,{children:"Texture atlas for grid glide animation."})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"_GridGlideTileCount"})}),(0,t.jsx)(d.td,{children:"Float"}),(0,t.jsx)(d.td,{children:"Number of tiles in grid glide."})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"_GridGlideAmount"})}),(0,t.jsx)(d.td,{children:"Vector"}),(0,t.jsx)(d.td,{children:"Defines tile movement direction."})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"_GridGlideSpeed"})}),(0,t.jsx)(d.td,{children:"Float"}),(0,t.jsx)(d.td,{children:"Controls glide animation speed."})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"_DepthParallaxEnabled"})}),(0,t.jsx)(d.td,{children:"Toggle"}),(0,t.jsx)(d.td,{children:"Enables depth-based parallax offset."})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"_DepthTexture"})}),(0,t.jsx)(d.td,{children:"2D"}),(0,t.jsx)(d.td,{children:"Depth map for parallax effect."})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"_DepthHeight"})}),(0,t.jsx)(d.td,{children:"Range (0.01\u20134)"}),(0,t.jsx)(d.td,{children:"Parallax depth intensity."})]})]})]}),"\n",(0,t.jsxs)(d.blockquote,{children:["\n",(0,t.jsxs)(d.p,{children:["\ud83d\udca1 ",(0,t.jsx)(d.strong,{children:"Tip:"})," Enable only the features you need (rainbow, parallax, etc.) to reduce shader variant count."]}),"\n"]})]})}function x(e={}){const{wrapper:d}={...(0,i.R)(),...e.components};return d?(0,t.jsx)(d,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},8453:(e,d,r)=>{r.d(d,{R:()=>n,x:()=>l});var s=r(6540);const t={},i=s.createContext(t);function n(e){const d=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(d):{...d,...e}},[d,e])}function l(e){let d;return d=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:n(e.components),s.createElement(i.Provider,{value:d},e.children)}}}]);
"use strict";(globalThis.webpackChunkmilo_shader_docs=globalThis.webpackChunkmilo_shader_docs||[]).push([[538],{1105:(e,r,i)=>{i.r(r),i.d(r,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"shaders/gridshader/overview","title":"Overview","description":"The Grid Shader is a highly customizable emissive grid system built for VRChat worlds and avatars.","source":"@site/docs/shaders/gridshader/overview.md","sourceDirName":"shaders/gridshader","slug":"/shaders/gridshader/overview","permalink":"/docs/shaders/gridshader/overview","draft":false,"unlisted":false,"editUrl":"https://github.com/NovaAshwolfDev/Shader-Docs/tree/main/docs/shaders/gridshader/overview.md","tags":[],"version":"current","frontMatter":{"id":"overview","title":"Overview"},"sidebar":"docsSidebar","previous":{"title":"The Basics","permalink":"/docs/basics"},"next":{"title":"Properties","permalink":"/docs/shaders/gridshader/properties"}}');var n=i(4848),a=i(8453);const t={id:"overview",title:"Overview"},d="\ud83e\uddca Grid Shader",o={},l=[{value:"\u2728 Features",id:"-features",level:2},{value:"\ud83e\udde9 Ideal For",id:"-ideal-for",level:2}];function c(e){const r={blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.header,{children:(0,n.jsx)(r.h1,{id:"-grid-shader",children:"\ud83e\uddca Grid Shader"})}),"\n",(0,n.jsxs)(r.p,{children:["The ",(0,n.jsx)(r.strong,{children:"Grid Shader"})," is a highly customizable emissive grid system built for VRChat worlds and avatars.",(0,n.jsx)(r.br,{}),"\n","It supports ",(0,n.jsx)(r.strong,{children:"rainbow effects, depth parallax, gradients, gliding tiles, and alpha masking"}),", allowing dynamic and visually rich sci-fi environments."]}),"\n",(0,n.jsx)(r.h2,{id:"-features",children:"\u2728 Features"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"Adjustable zoom and world-space grid positioning"}),"\n",(0,n.jsx)(r.li,{children:"Optional camera direction-based scrolling"}),"\n",(0,n.jsx)(r.li,{children:"Gradient coloring and hue-shifting rainbow"}),"\n",(0,n.jsx)(r.li,{children:"Spiral rainbow motion for animated trippy visuals"}),"\n",(0,n.jsx)(r.li,{children:"Alpha mask and parallax support for layered depth"}),"\n",(0,n.jsx)(r.li,{children:'Optional grid tile "gliding" animation with atlas texture'}),"\n"]}),"\n",(0,n.jsx)(r.h2,{id:"-ideal-for",children:"\ud83e\udde9 Ideal For"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"Sci-fi floors, walls, holographic grids"}),"\n",(0,n.jsx)(r.li,{children:"Reactive surfaces and rhythm-world environments"}),"\n",(0,n.jsx)(r.li,{children:"VRChat stages, dance floors, or procedural visuals"}),"\n"]}),"\n",(0,n.jsxs)(r.blockquote,{children:["\n",(0,n.jsxs)(r.p,{children:["\u26a1 Highly flexible with many ",(0,n.jsx)(r.code,{children:"#pragma shader_feature"})," toggles \u2014 disable unused features for performance."]}),"\n"]})]})}function h(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,r,i)=>{i.d(r,{R:()=>t,x:()=>d});var s=i(6540);const n={},a=s.createContext(n);function t(e){const r=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function d(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:t(e.components),s.createElement(a.Provider,{value:r},e.children)}}}]);